trigger:
  branches:
    include:
      - main
      - dev


variables:
  # Azure DevOps Variables
  azureSubscription: 'MyAzureSubscription'     # Azure subscription name
  resourceGroup: 'MyResourceGroup'             # Resource Group name
  appName: 'hello-world-app-test'                   # App name for the application
  region: 'eastus'                             # Azure region
  keyVaultName: 'MyKeyVault-test'                   # Name of Azure Key Vault for secrets
  sonarCloudOrganization: 'my-orgnization'             # SonarCloud organization
  sonarCloudProjectKey: 'hello-world'          # SonarCloud project key
  sonarCloudToken: $(SONAR_CLOUD_TOKEN)       # Secure token from Azure Key Vault or pipeline variable

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET SDK'
            inputs:
              packageType: 'sdk'
              version: 'latest'

          - task: Checkout@1
            displayName: 'Checkout Code'

          - task: SonarCloudPrepare@1
            displayName: 'Prepare SonarCloud Analysis'
            inputs:
              SonarCloud: $(sonarCloudOrganization)
              organization: $(sonarCloudOrganization)
              scannerMode: 'MSBuild'
              projectKey: $(sonarCloudProjectKey)
              projectName: 'HelloWorld'

          - script: |
              dotnet restore
              dotnet build --configuration Release
            displayName: 'Restore and Build Solution'

          - task: SonarCloudAnalyze@1
            displayName: 'Analyze Code with SonarCloud'

          - task: SonarCloudPublish@1
            displayName: 'Publish SonarCloud Results'
            inputs:
              pollingTimeoutSec: '300'

  - stage: QualityGate
    displayName: 'Quality Gate Check'
    jobs:
      - job: QualityGateJob
        displayName: 'Quality Gate Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: SonarCloudQualityGate@1
            displayName: 'SonarCloud Quality Gate'
            inputs:
              SonarCloud: $(sonarCloudOrganization)
              organization: $(sonarCloudOrganization)
              projectKey: $(sonarCloudProjectKey)
              qualityGate: 'true'

  - stage: Deploy
    displayName: 'Deployment Stage'
    jobs:
      - job: DeployJob
        displayName: 'Deploy Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureKeyVault@2
            displayName: 'Fetch Secrets from Azure Key Vault'
            inputs:
              connectedServiceName: $(azureSubscription)
              keyVaultName: $(keyVaultName)
              secretsFilter: 'MyAppSecret,MyConnectionString'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(appName)
              resourceGroupName: $(resourceGroup)
              package: '$(Build.ArtifactStagingDirectory)/drop/*.zip'

          - script: |
              echo "Deployment completed successfully!"
            displayName: 'Post-deployment Actions'
